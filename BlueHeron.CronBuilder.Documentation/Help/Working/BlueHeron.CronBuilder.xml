<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>
BlueHeron.CronBuilder
</name>
  </assembly>
  <members>
    <member name="T:BlueHeron.Cron.My.Resources.Resources">
      <summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.ResourceManager">
      <summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.Culture">
      <summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.errArgumentCount">
      <summary>
  Looks up a localized string similar to Invalid number of arguments..
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.errParameter">
      <summary>
  Looks up a localized string similar to {0} is invalid..
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.errParameterCount">
      <summary>
  Looks up a localized string similar to Invalid number of parameters..
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.errParameterValueType">
      <summary>
  Looks up a localized string similar to Invalid ParameterValueType value (or combination)..
</summary>
    </member>
    <member name="P:BlueHeron.Cron.My.Resources.Resources.errParameterWithMessage">
      <summary>
  Looks up a localized string similar to {0} is invalid. {1}..
</summary>
    </member>
    <member name="T:BlueHeron.Cron.CronBuilder">
      <summary>
 Object that uses a fluent pattern to easily generate Cron expressions.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.Build(System.Boolean,System.Boolean)">
      <summary>
 Returns the <see cref="T:BlueHeron.Cron.CronExpression" />, optionally validating it.
 </summary>
      <param name="validate">If true, validation is performed and an error thrown upon failure</param>
      <param name="throwErrorMessages">Include detailed error messages when throwing an error</param>
      <exception cref="T:System.ArgumentException">The expression contains one or more invalid parameters</exception>
      <returns>A <see cref="T:BlueHeron.Cron.CronExpression" /></returns>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.Build(System.String,System.Boolean,System.Boolean)">
      <summary>
 Creates a <see cref="T:BlueHeron.Cron.CronExpression" /> from the given string and returns it, optionally validating it.
 </summary>
      <param name="cronExpression">The string representation of a Cron expression</param>
      <param name="validate">If true, validation is performed and an error thrown upon failure</param>
      <param name="throwErrorMessages">Include detailed error messages when throwing an error</param>
      <exception cref="T:System.ArgumentException">The expression contains one or more invalid parameters</exception>
      <returns>A <see cref="T:BlueHeron.Cron.CronExpression" /></returns>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.With(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object[])">
      <summary>
 Modifies part of the expression using the given parameters.
 </summary>
      <param name="parameterType">The <paramref name="parameterType">expression part</paramref> to modify</param>
      <param name="parameterValueType">The <paramref name="parameterValueType">type of the value(s) to apply</paramref></param>
      <param name="values">Variable length array of values. Valid argument count depends on the <paramref name="parameterValueType" /> value</param>
      <returns>The modified <see cref="T:BlueHeron.Cron.CronBuilder" />. Call <see cref="M:BlueHeron.Cron.CronBuilder.Build(System.Boolean,System.Boolean)" /> to obtain the modified expression</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.#ctor">
      <summary>
 Creates a new CronBuilder, defaulting to a '* * * * *' expression.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.CronExpression">
      <summary>
 Object, that represents a Cron expression.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronExpression.Parameters">
      <summary>
 The collection of <see cref="T:BlueHeron.Cron.ICronParameter" /> objects that are part of the expression.
 </summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2" /></returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.FirstOccurrenceAfter(System.DateTime)">
      <summary>
 Returns the first date and time on or after the given date when the schedule that is represented by this expression is matched.
 </summary>
      <param name="datum">The date and time to which the closest match in the future must be found</param>
      <returns>A date</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.LastOccurrenceBefore(System.DateTime)">
      <summary>
 Returns the first date and time on or before the given date when the schedule that is represented by this expression is matched.
 </summary>
      <param name="datum">The date and time to which the closest match in the past must be found</param>
      <returns>A date</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.ToString">
      <summary>
 Returns the string representation of this expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.FindClosestDate(System.DateTime,System.Boolean)">
      <summary>
 Returns the first date and time before or after the given date when the schedule that is represented by this expression is matched.
 </summary>
      <param name="datum">The date and time to which the closest match in the past or future must be found</param>
      <param name="goBack">If True, the closest match in the past is returned, else the closest match in the future</param>
      <returns>A date</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.FindClosestValue(System.Collections.Generic.List{System.Int32},System.Int32,System.Boolean,System.Int32@)">
      <summary>
 Finds the closest matching number to the given value for the given pattern of numbers, searching either forward or backward.
 If the search moves beyond the beginning (looking backward) or end (looking forward), -1 or +1 respectively is carried to the next level (assuming: minute -&gt; hour -&gt; day -&gt; month -&gt; year).
 </summary>
      <param name="pattern">A <see cref="T:System.Collections.Generic.List`1" /></param>
      <param name="value">The value to match</param>
      <param name="goBack">If true, search backwards for the closest match</param>
      <param name="carry">-1, 0 or +1 to be added to the next level</param>
      <returns>The closest matching number</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.FindClosestDay(System.DateTime,System.Boolean,System.Int32@)">
      <summary>
 Finds the closest matching day to the given date for this <see cref="T:BlueHeron.Cron.CronExpression" />, searching either forward or backward.
 For each cycle that the search moves beyond the beginning (looking backward) or end (looking forward), -1 or +1 respectively, is added to the number to be carried to the next level (assuming: minute -&gt; hour -&gt; day -&gt; month -&gt; year).
 </summary>
      <param name="datum">The date to match</param>
      <param name="goBack">If true, search backwards for the closest match</param>
      <param name="carry">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.#ctor">
      <summary>
 Creates a new CronExpression, defaulting to a '* * * * *' expression.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.CronAnyParameter">
      <summary>
 The wildcard parameter, i.e. '*', that matches all values.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronAnyParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.CronAnyParameter.ParameterType" /> of this parameter.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronAnyParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.ToList">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToList" />
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.ToString">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToString" />
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.Validate">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate" />
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.Validate(System.String@)">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate(System.String@)" />
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.#ctor(BlueHeron.Cron.ParameterType)">
      <summary>
 Creates a new CronAnyParameter.
 </summary>
      <param name="paramType">The <see cref="P:BlueHeron.Cron.CronAnyParameter.ParameterType" /></param>
    </member>
    <member name="T:BlueHeron.Cron.CronListParameter">
      <summary>
 Parameter that consists of a comma-separated list of values.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronListParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.CronListParameter.ParameterType" /> of this parameter.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronListParameter.Values">
      <summary>
 List of assigned values.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronListParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.ToList">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToList" />
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.ToString">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToString" />
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.Validate">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate" />
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.Validate(System.String@)">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate(System.String@)" />
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.#ctor(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object[])">
      <summary>
 Creates a new CronListParameter that should contain values of the given <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
      <param name="valueType">The expected <see cref="T:BlueHeron.Cron.ParameterValueType" /></param>
      <param name="values">The assigned values</param>
    </member>
    <member name="T:BlueHeron.Cron.CronRangeParameter">
      <summary>
 Parameter that consists of a range of values.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.From">
      <summary>
 The assigned start value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.CronRangeParameter.ParameterType" /> of this parameter.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.To">
      <summary>
 The assigned end value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.ToList">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToList" />
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.ToString">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToString" />
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.Validate">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate" />
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.Validate(System.String@)">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate(System.String@)" />
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.#ctor(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object,System.Object)">
      <summary>
 Creates a new CronRangeParameter that should contain two values of the given <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
      <param name="valueType">The expected <see cref="T:BlueHeron.Cron.ParameterValueType" /></param>
      <param name="fromValue">The assigned start value</param>
      <param name="toValue">The assigned start value</param>
    </member>
    <member name="T:BlueHeron.Cron.CronStepParameter">
      <summary>
 Parameter that consists of a start value and an increment.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.Increment">
      <summary>
 The assigned increment value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.CronStepParameter.ParameterType" /> of this parameter
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.Value">
      <summary>
 The assigned start value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.ToList">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToList" />
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.ToString">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToString" />
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.Validate">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate" />
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.Validate(System.String@)">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate(System.String@)" />
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.#ctor(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object,System.Object)">
      <summary>
 Creates a new CronStepParameter that should contain two values of the given <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
      <param name="valueType">The expected <see cref="T:BlueHeron.Cron.ParameterValueType" /></param>
      <param name="startValue">The assigned start value</param>
      <param name="increment">The assigned start value</param>
    </member>
    <member name="T:BlueHeron.Cron.CronValueParameter">
      <summary>
 Parameter that consists of a single value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronValueParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.CronValueParameter.ParameterType" /> of this parameter
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronValueParameter.Value">
      <summary>
 The assigned value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronValueParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.ToList">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToList" />
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.ToString">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.ToString" />
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.Validate">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate" />
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.Validate(System.String@)">
      <inheritdoc cref="M:BlueHeron.Cron.ICronParameter.Validate(System.String@)" />
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.#ctor(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object)">
      <summary>
 Creates a new CronValueParameter that should contain a value of the given <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
      <param name="valueType">The expected <see cref="T:BlueHeron.Cron.ParameterValueType" /></param>
      <param name="value">The assigned value</param>
    </member>
    <member name="T:BlueHeron.Cron.ICronParameter">
      <summary>
 Interface definition for Cron parameters.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.ICronParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.ICronParameter.ParameterType" /> of this parameter.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.ICronParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.ICronParameter.ToList">
      <summary>
 Returns all integer values that match this parameter.
 </summary>
      <returns>A <see cref="T:System.Collections.Generic.List`1" /></returns>
    </member>
    <member name="M:BlueHeron.Cron.ICronParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.ICronParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.ICronParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="T:BlueHeron.Cron.Constants">
      <summary>
 String constants and format strings.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.ParameterType">
      <summary>
 Enumeration of possible parts of a Cron expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Minute">
      <summary>
 The parameter describes the minute part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Hour">
      <summary>
 The parameter describes the hour part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Day">
      <summary>
 The parameter describes the day (of the month) part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Month">
      <summary>
 The parameter describes the month part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.WeekDay">
      <summary>
 The parameter describes the day (of the week) part of the expression.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.ParameterValueType">
      <summary>
 Enumeration of possible parameter value types.
 Valid values:
 <list type="bullet"><item>0:	Any</item><item>8:	A single integer value</item><item>9:	List of integers</item><item>10:	Range of integers</item><item>12:	Step of integers</item><item>16:	A single <see cref="T:BlueHeron.Cron.MonthOfYear" /> value</item><item>17:	List of <see cref="T:BlueHeron.Cron.MonthOfYear" /> values</item><item>18:	Range of <see cref="T:BlueHeron.Cron.MonthOfYear" /> values</item><item>20:	Step of <see cref="T:BlueHeron.Cron.MonthOfYear" /> values</item><item>32:	A single <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> value</item><item>33:	List of <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> values</item><item>34:	Range of <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> values</item><item>36:	Step of <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> values</item></list><hr />
 Valid combinations:
 <list type="bullet"><item>Minute:	0,8,9,10,12</item><item>Hour:		0,8,9,10,12</item><item>Day:		0,8,9,10,12</item><item>Month:	0,8,9,10,12,16,17,18,20</item><item>WeekDay:	0,8,9,10,12,32,33,34,36</item></list></summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Any">
      <summary>
 No value specified, meaning all values are a match.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.List">
      <summary>
 The parameter is a list of distinct values.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Range">
      <summary>
 The parameter is a range of values.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Step">
      <summary>
 The parameter consists of a start value and a step value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Value">
      <summary>
 The parameter consists of a single value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Month">
      <summary>
 The parameter is a <see cref="T:BlueHeron.Cron.MonthOfYear" /> value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.List" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Range" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Step" />, or <see cref="F:BlueHeron.Cron.ParameterValueType.Value" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.DayOfweek">
      <summary>
 The parameter is a <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.List" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Range" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Step" />, or <see cref="F:BlueHeron.Cron.ParameterValueType.Value" /> parameter types.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.MonthOfYear">
      <summary>
 Enumeration of possible months in a year.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.JAN">
      <summary>
 January.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.FEB">
      <summary>
 February.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.MAR">
      <summary>
 March.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.APR">
      <summary>
 April.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.MAY">
      <summary>
 May.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.JUN">
      <summary>
 June.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.JUL">
      <summary>
 July.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.AUG">
      <summary>
 August.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.SEP">
      <summary>
 September.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.OCT">
      <summary>
 October.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.NOV">
      <summary>
 November.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.DEC">
      <summary>
 December.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.DayOfWeek">
      <summary>
 Enumeration of possible days in the week.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.MON">
      <summary>
 Monday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.TUE">
      <summary>
 Tuesday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.WED">
      <summary>
 Wednesday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.THU">
      <summary>
 Thursday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.FRI">
      <summary>
 Friday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.SAT">
      <summary>
 Saturday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.SUN">
      <summary>
 Sunday.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.Extensions">
      <summary>
 Extension methods.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.Extensions.Validate(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object)">
      <summary>
 Validates the given value for the given parameter type and value type.
 </summary>
      <param name="parameterType">A <see cref="T:BlueHeron.Cron.ParameterType" /></param>
      <param name="valueType">A <see cref="T:BlueHeron.Cron.ParameterValueType" /></param>
      <param name="value">The value to validate</param>
      <returns>True if the given value is valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.Extensions.IsSingleValueType(BlueHeron.Cron.ParameterValueType)">
      <summary>
 Returns True if this <see cref="T:BlueHeron.Cron.ParameterValueType" /> value represents a single value.
 </summary>
      <param name="valueType">A <see cref="T:BlueHeron.Cron.ParameterValueType" /></param>
      <returns>True, if the given value is one of the following: <see cref="F:BlueHeron.Cron.ParameterValueType.Value" />, <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /></returns>
    </member>
    <member name="M:BlueHeron.Cron.Extensions.ToInteger(System.Object)">
      <summary>
 Converts the given value to its corresponding integer value.
 </summary>
      <param name="value">The value to convert</param>
      <returns>An integer</returns>
    </member>
    <member name="N:BlueHeron.Cron">
      <summary> </summary>
    </member>
  </members>
</doc>