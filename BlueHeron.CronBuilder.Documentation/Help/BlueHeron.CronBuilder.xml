<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>BlueHeron.CronBuilder</name>
  </assembly>
  <members>
    <member name="T:BlueHeron.Cron.CronAnyParameter">
      <summary>
 The wildcard parameter, i.e. '*', that matches all values.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronAnyParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="T:BlueHeron.Cron.CronBuilder">
      <summary>
 Object that uses a fluent pattern to easily generate Cron expressions.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.#ctor">
      <summary>
 Creates a new CronBuilder, defaulting to a '* * * * *' expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.Build(System.Boolean,System.Boolean)">
      <summary>
 Returns the <see cref="T:BlueHeron.Cron.CronExpression" />, optionally validating it.
 </summary>
      <param name="validate">If true, validation is performed and an error thrown upon failure</param>
      <param name="throwErrorMessages">Include detailed error messages when throwing an error</param>
      <returns>A <see cref="T:BlueHeron.Cron.CronExpression" /></returns>
      <exception cref="T:System.ArgumentException">The expression contains one or more invalid parameters</exception>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.Build(System.String,System.Boolean,System.Boolean)">
      <summary>
 Creates a <see cref="T:BlueHeron.Cron.CronExpression" /> from the given string and returns it, optionally validating it.
 </summary>
      <param name="cronExpression">The string representation of a Cron expression</param>
      <param name="validate">If true, validation is performed and an error thrown upon failure</param>
      <param name="throwErrorMessages">Include detailed error messages when throwing an error</param>
      <returns>A <see cref="T:BlueHeron.Cron.CronExpression" /></returns>
      <exception cref="T:System.ArgumentException">The expression contains one or more invalid parameters</exception>
    </member>
    <member name="M:BlueHeron.Cron.CronBuilder.With(BlueHeron.Cron.ParameterType,BlueHeron.Cron.ParameterValueType,System.Object[])">
      <summary>
 Modifies part of the expression using the given parameters.
 </summary>
      <param name="parameterType">The <paramref name="parameterType">expression part</paramref> to modify</param>
      <param name="parameterValueType">The <paramref name="parameterValueType">type of the value(s) to apply</paramref></param>
      <param name="values">Variable length array of values. Valid argument count depends on the <paramref name="parameterValueType" /> value</param>
      <returns>The modified <see cref="T:BlueHeron.Cron.CronBuilder" />. Call <see cref="M:BlueHeron.Cron.CronBuilder.Build(System.Boolean,System.Boolean)" /> to obtain the modified expression</returns>
    </member>
    <member name="T:BlueHeron.Cron.CronExpression">
      <summary>
 Object, that represents a Cron expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.FirstOccurrenceAfter(System.DateTime)">
      <summary>
 Returns the first date and time after the given date when the schedule that is represented by this expression is matched.
 </summary>
      <param name="datum">The date and time to which the closest match in the future must be found</param>
      <returns>A date</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.LastOccurrenceBefore(System.DateTime)">
      <summary>
 Returns the first date and time before the given date when the schedule that is represented by this expression is matched.
 </summary>
      <param name="datum">The date and time to which the closest match in the past must be found</param>
      <returns>A date</returns>
    </member>
    <member name="P:BlueHeron.Cron.CronExpression.Parameters">
      <summary>
 The collection of <see cref="T:BlueHeron.Cron.CronParameter" /> objects that are part of the expression.
 </summary>
      <returns>A <see cref="T:System.Collections.Generic.Dictionary`2" /></returns>
    </member>
    <member name="M:BlueHeron.Cron.CronExpression.ToString">
      <summary>
 Returns the string representation of this expression.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.CronListParameter">
      <summary>
 Parameter that consists of a comma-separated list of values.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronListParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="P:BlueHeron.Cron.CronListParameter.Values">
      <summary>
 List of assigned values.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronListParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.CronParameter">
      <summary>
 Base class for Cron parameters.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronParameter.#ctor(BlueHeron.Cron.ParameterType)">
      <summary>
 Creates a new CronParameter.
 </summary>
      <param name="paramType">The <see cref="P:BlueHeron.Cron.CronParameter.ParameterType" /></param>
    </member>
    <member name="P:BlueHeron.Cron.CronParameter.ParameterType">
      <summary>
 The <see cref="P:BlueHeron.Cron.CronParameter.ParameterType" /> of this parameter.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="T:BlueHeron.Cron.CronRangeParameter">
      <summary>
 Parameter that consists of a range of values.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.From">
      <summary>
 The assigned start value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.To">
      <summary>
 The assigned end value.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronRangeParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="P:BlueHeron.Cron.CronRangeParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.CronStepParameter">
      <summary>
 Parameter that consists of a start value and an increment.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.Increment">
      <summary>
 The assigned increment value.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronStepParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.Value">
      <summary>
 The assigned start value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronStepParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.CronValueParameter">
      <summary>
 Parameter that consists of a single value.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.ToString">
      <summary>
 Returns the parameter expression.
 </summary>
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.Validate">
      <summary>
 Validates this parameter.
 </summary>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="M:BlueHeron.Cron.CronValueParameter.Validate(System.String@)">
      <summary>
 Validates this parameter.
 </summary>
      <param name="errorMessage">Will hold an error message if validation fails</param>
      <returns>True, if supplied values are valid</returns>
    </member>
    <member name="P:BlueHeron.Cron.CronValueParameter.Value">
      <summary>
 The assigned value.
 </summary>
    </member>
    <member name="P:BlueHeron.Cron.CronValueParameter.ValueType">
      <summary>
 The expected <see cref="T:BlueHeron.Cron.ParameterValueType" />.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.DayOfWeek">
      <summary>
 Enumeration of possible days in the week.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.MON">
      <summary>
 Monday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.TUE">
      <summary>
 Tuesday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.WED">
      <summary>
 Wednesday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.THU">
      <summary>
 Thursday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.FRI">
      <summary>
 Friday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.SAT">
      <summary>
 Saturday.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.DayOfWeek.SUN">
      <summary>
 Sunday.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.MonthOfYear">
      <summary>
 Enumeration of possible months in a year.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.JAN">
      <summary>
 January.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.FEB">
      <summary>
 February.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.MAR">
      <summary>
 March.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.APR">
      <summary>
 April.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.MAY">
      <summary>
 May.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.JUN">
      <summary>
 June.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.JUL">
      <summary>
 July.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.AUG">
      <summary>
 August.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.SEP">
      <summary>
 September.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.OCT">
      <summary>
 October.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.NOV">
      <summary>
 November.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.MonthOfYear.DEC">
      <summary>
 December.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.ParameterType">
      <summary>
 Enumeration of possible parts of a Cron expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Minute">
      <summary>
 The parameter describes the minute part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Hour">
      <summary>
 The parameter describes the hour part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Day">
      <summary>
 The parameter describes the day (of the month) part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.Month">
      <summary>
 The parameter describes the month part of the expression.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterType.WeekDay">
      <summary>
 The parameter describes the day (of the week) part of the expression.
 </summary>
    </member>
    <member name="T:BlueHeron.Cron.ParameterValueType">
      <summary>
 Enumeration of possible parameter value types.
 <list type="bullet"><listheader>Valid values:</listheader><item>0:	Any</item><item>8:	A single integer value</item><item>9:	List of integers</item><item>10:	Range of integers</item><item>12:	Step of integers</item><item>16:	A single <see cref="T:BlueHeron.Cron.MonthOfYear" /> value</item><item>17:	List of <see cref="T:BlueHeron.Cron.MonthOfYear" /> values</item><item>18:	Range of <see cref="T:BlueHeron.Cron.MonthOfYear" /> values</item><item>20:	Step of <see cref="T:BlueHeron.Cron.MonthOfYear" /> values</item><item>32:	A single <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> value</item><item>33:	List of <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> values</item><item>34:	Range of <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> values</item><item>36:	Step of <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> values</item></list><list type="bullet"><listheader>Valid combinations:</listheader><item>Minute:	0,8,9,10,12</item><item>Hour:		0,8,9,10,12</item><item>Day:		0,8,9,10,12</item><item>Month:	0,8,9,10,12,16,17,18,20</item><item>WeekDay:	0,8,9,10,12,32,33,34,36</item></list></summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Any">
      <summary>
 No value specified, meaning all values are a match.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.List">
      <summary>
 The parameter is a list of distinct values.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Range">
      <summary>
 The parameter is a range of values.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Step">
      <summary>
 The parameter consists of a start value and a step value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Value">
      <summary>
 The parameter consists of a single value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.Month" /> or <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.Month">
      <summary>
 The parameter is a <see cref="T:BlueHeron.Cron.MonthOfYear" /> value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.List" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Range" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Step" />, or <see cref="F:BlueHeron.Cron.ParameterValueType.Value" /> parameter types.
 </summary>
    </member>
    <member name="F:BlueHeron.Cron.ParameterValueType.DayOfweek">
      <summary>
 The parameter is a <see cref="F:BlueHeron.Cron.ParameterValueType.DayOfweek" /> value.
 May be combined with the <see cref="F:BlueHeron.Cron.ParameterValueType.List" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Range" />,<see cref="F:BlueHeron.Cron.ParameterValueType.Step" />, or <see cref="F:BlueHeron.Cron.ParameterValueType.Value" /> parameter types.
 </summary>
    </member>
  </members>
</doc>